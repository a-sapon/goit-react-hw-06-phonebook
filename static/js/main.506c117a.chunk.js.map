{"version":3,"sources":["redux/types.js","redux/actionCreators.js","components/contactForm/ContactForm.js","components/contactsList/ContactsList.js","components/App.js","redux/reducers.js","redux/store.js","index.js","components/contactForm/contactForm.module.css"],"names":["addContact","createAction","Type","deleteContact","filterContacts","clearFilterVal","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","contacts","some","item","toLowerCase","alert","createdContact","id","shortId","handleFilterChange","this","onSubmit","className","styles","contactForm","inputLabel","type","onChange","inputWrapper","placeholder","filterVal","Component","connect","filter","searchResult","length","map","key","onClick","App","reducer","createReducer","payload","includes","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","middleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.506c117a.chunk.js","sourcesContent":["export default {\r\n  ADD_CONTACT: 'ADD_CONTACT',\r\n  DELETE_CONTACT: 'DELETE_CONTACT',\r\n  FILTER_CONTACTS: 'FILTER_CONTACTS',\r\n  CLEAR_FILTER: 'CLEAR_FILTER'\r\n};","import { createAction } from '@reduxjs/toolkit';\r\nimport Type from './types';\r\n\r\nexport const addContact = createAction(Type.ADD_CONTACT);\r\nexport const deleteContact = createAction(Type.DELETE_CONTACT);\r\nexport const filterContacts = createAction(Type.FILTER_CONTACTS);\r\nexport const clearFilterVal = createAction(Type.CLEAR_FILTER);\r\n\r\n// ------------- Old version without toolkit -----------------\r\n// export const addContact = contact => ({\r\n//   type: Type.ADD_CONTACT,\r\n//   payload: contact\r\n// });\r\n\r\n// export const deleteContact = id => ({\r\n//   type: Type.DELETE_CONTACT,\r\n//   payload: id\r\n// });\r\n\r\n// export const filterContacts = filterVal => ({\r\n//   type: Type.FILTER_CONTACTS,\r\n//   payload: filterVal\r\n// });\r\n\r\n// export const clearFilterVal = () => ({\r\n//   type: Type.CLEAR_FILTER\r\n// });","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addContact,\r\n  filterContacts,\r\n  clearFilterVal\r\n} from '../../redux/actionCreators';\r\nimport shortId from 'shortid';\r\nimport styles from './contactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: ''\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (!this.props.contacts.some(item => item.name.toLowerCase() === name.toLowerCase())) {\r\n      const createdContact = { name, number, id: shortId() };\r\n      this.props.addContact(createdContact);\r\n      this.setState({\r\n        ...INITIAL_STATE\r\n      });\r\n    } else {\r\n      alert(`${name} is already in contacts!`);\r\n    }\r\n  };\r\n\r\n  handleFilterChange = e => {\r\n    if (e.target.value !== '') {\r\n      this.props.filterContacts(e.target.value);\r\n    } else {\r\n      this.props.clearFilterVal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n          <label className={styles.inputLabel}>\r\n            Name:\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.inputLabel}>\r\n            Number:\r\n            <input\r\n              type='text'\r\n              name='number'\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type='submit'>Add Contact</button>\r\n        </form>\r\n        <div className={styles.inputWrapper}>\r\n        <input\r\n            type='text'\r\n            placeholder='Search contacts by name...'\r\n            value={this.props.filterVal}\r\n            onChange={this.handleFilterChange}\r\n          />\r\n          </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  filterVal: state.filter\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContact,\r\n  filterContacts,\r\n  clearFilterVal\r\n})(ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actionCreators';\r\n\r\nconst ContactsList = ({ contacts, searchResult, deleteContact }) =>\r\n  searchResult.length !== 0 ? (\r\n    <ul>\r\n      {searchResult.map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          <p>{name}:</p>\r\n          <p>{number}</p>\r\n          <button type='button' onClick={() => deleteContact(id)}>\r\n            x\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    contacts.length !== 0 && (\r\n      <ul>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li key={id}>\r\n            <p>{name}: </p>\r\n            <p>{number}</p>\r\n            <button type='button' onClick={() => deleteContact(id)}>\r\n              x\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  searchResult: state.searchResult\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteContact })(ContactsList);\r\n","import React from 'react';\nimport './App.css';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactsList from './contactsList/ContactsList';\n\nconst App = () => (\n  <>\n  <h2>Phonebook</h2>\n    <ContactForm />\n    <ContactsList />\n  </>\n);\n\nexport default App;","import { createReducer } from '@reduxjs/toolkit';\r\nimport Type from './types';\r\n\r\nconst INITIAL_STATE = {\r\n  contacts: [],\r\n  filter: '',\r\n  searchResult: []\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  { ...INITIAL_STATE },\r\n  {\r\n    [Type.ADD_CONTACT]: (state, { payload }) => ({\r\n      ...state,\r\n      contacts: [...state.contacts, payload]\r\n    }),\r\n    [Type.DELETE_CONTACT]: (state, { payload }) => ({\r\n      ...state,\r\n      contacts: state.contacts.filter(item => item.id !== payload)\r\n    }),\r\n    [Type.FILTER_CONTACTS]: (state, { payload }) => ({\r\n      ...state,\r\n      filter: payload,\r\n      searchResult: state.contacts.filter(item =>\r\n        item.name.toLowerCase().includes(payload.toLowerCase())\r\n      )\r\n    }),\r\n    [Type.CLEAR_FILTER]: state => ({\r\n      ...state,\r\n      filter: '',\r\n      searchResult: []\r\n    })\r\n  }\r\n);\r\n\r\n// ------------- Old version without toolkit -----------------\r\n// export const reducer = (state = INITIAL_STATE, action) => {\r\n//   switch (action.type) {\r\n//     case Type.ADD_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: [...state.contacts, action.payload]\r\n//       };\r\n//     case Type.DELETE_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: state.contacts.filter(item => item.id !== action.payload)\r\n//       };\r\n//     case Type.FILTER_CONTACTS:\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//         searchResult: state.contacts.filter(item =>\r\n//           item.name.toLowerCase().includes(state.filter.toLowerCase())\r\n//         )\r\n//       };\r\n//     case Type.CLEAR_FILTER:\r\n//       return {\r\n//         ...state,\r\n//         filter: '',\r\n//         searchResult: []\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };","import { configureStore } from '@reduxjs/toolkit';\r\nimport { reducer } from './reducers';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const store = configureStore({reducer: persistedReducer, middleware: [thunk]});\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__nWxWU\",\"inputWrapper\":\"contactForm_inputWrapper__4xRFr\",\"inputLabel\":\"contactForm_inputLabel__1juho\"};"],"sourceRoot":""}